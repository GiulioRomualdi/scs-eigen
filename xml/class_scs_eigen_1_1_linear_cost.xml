<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_scs_eigen_1_1_linear_cost" kind="class" language="C++" prot="public">
    <compoundname>ScsEigen::LinearCost</compoundname>
    <basecompoundref refid="class_scs_eigen_1_1_cost" prot="public" virt="non-virtual">ScsEigen::Cost</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_scs_eigen_1_1_linear_cost_1a74cc6c0e524f87dc266315ba2ffb93e9" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd ScsEigen::LinearCost::m_a</definition>
        <argsstring></argsstring>
        <name>m_a</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="26" column="21" bodyfile="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_scs_eigen_1_1_linear_cost_1a7f613fb1d2038aaf70437ff9250d5beb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double ScsEigen::LinearCost::m_b</definition>
        <argsstring></argsstring>
        <name>m_b</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="27" column="12" bodyfile="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1aec1825bb03bb8562d7f538bb7389d795" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ScsEigen::LinearCost::LinearCost</definition>
        <argsstring>()=default</argsstring>
        <name>LinearCost</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="30" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1abc5cceaadf6dbabfb9563e3eeb1aa70e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ScsEigen::LinearCost::LinearCost</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;a, double b=0)</argsstring>
        <name>LinearCost</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1aec63d1961092f887a1c102657ee507ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScsEigen::LinearCost::setA</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;a)</argsstring>
        <name>setA</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="34" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1a5fe2557f6c40df79842f5e5d25b693b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ScsEigen::LinearCost::setB</definition>
        <argsstring>(double b)</argsstring>
        <name>setB</name>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="36" column="10"/>
      </memberdef>
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1add79153bc324a7b916fa4fae4843719b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::VectorXd&gt; ScsEigen::LinearCost::getA</definition>
        <argsstring>() const</argsstring>
        <name>getA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="38" column="16"/>
      </memberdef>
      <memberdef kind="function" id="class_scs_eigen_1_1_linear_cost_1a8b2340be61f8aa58b4b758a744393595" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ScsEigen::LinearCost::getB</definition>
        <argsstring>() const</argsstring>
        <name>getB</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="40" column="12"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ScsEigen::Cost</label>
        <link refid="class_scs_eigen_1_1_cost"/>
      </node>
      <node id="1">
        <label>ScsEigen::LinearCost</label>
        <link refid="class_scs_eigen_1_1_linear_cost"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ScsEigen::Cost</label>
        <link refid="class_scs_eigen_1_1_cost"/>
      </node>
      <node id="1">
        <label>ScsEigen::LinearCost</label>
        <link refid="class_scs_eigen_1_1_linear_cost"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" line="24" column="1" bodyfile="/home/runner/work/scs-eigen/scs-eigen/src/ScsEigen/include/ScsEigen/LinearCost.h" bodystart="23" bodyend="41"/>
    <listofallmembers>
      <member refid="class_scs_eigen_1_1_cost_1a099de56842e4bbfc12892ad7dec383b4" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>Cost</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a79b224fe51825a03670957aad9b350eb" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>Cost</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1add79153bc324a7b916fa4fae4843719b" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>getA</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1a8b2340be61f8aa58b4b758a744393595" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>getB</name></member>
      <member refid="class_scs_eigen_1_1_cost_1ad8f79dc6098cb2b1482a82db470a9729" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>getDescrition</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a841cf2d15b830469bcd6ebd78aa632c2" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>getNumberOfVariables</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1aec1825bb03bb8562d7f538bb7389d795" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>LinearCost</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1abc5cceaadf6dbabfb9563e3eeb1aa70e" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>LinearCost</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1a74cc6c0e524f87dc266315ba2ffb93e9" prot="private" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>m_a</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1a7f613fb1d2038aaf70437ff9250d5beb" prot="private" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>m_b</name></member>
      <member refid="class_scs_eigen_1_1_cost_1ae5290a735fa7ba1076c3c1070535238f" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>m_description</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a50367c6000fc4c60fe03f18f4a122f1f" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>m_numberOfVariables</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1aec63d1961092f887a1c102657ee507ef" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>setA</name></member>
      <member refid="class_scs_eigen_1_1_linear_cost_1a5fe2557f6c40df79842f5e5d25b693b8" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>setB</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a51b18f3e291710eaf037f22c7f99a49e" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>setDescription</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a548c1b9db0a769a437ddb905dd6277cb" prot="protected" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>setNumberOfVariables</name></member>
      <member refid="class_scs_eigen_1_1_cost_1a92c54573567656b7ed835ddb47697073" prot="public" virt="non-virtual"><scope>ScsEigen::LinearCost</scope><name>~Cost</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
