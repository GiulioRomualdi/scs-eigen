<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classScsEigen_1_1QuadraticConstraint" kind="class" language="C++" prot="public">
    <compoundname>ScsEigen::QuadraticConstraint</compoundname>
    <basecompoundref refid="classScsEigen_1_1Constraint" prot="public" virt="non-virtual">ScsEigen::Constraint</basecompoundref>
    <includes local="no">ScsEigen/QuadraticConstraint.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classScsEigen_1_1QuadraticConstraint_1a54485d8fc105e9ed6a1ac8bcdaf886bf" prot="private" static="no" mutable="no">
        <type>Eigen::MatrixXd</type>
        <definition>Eigen::MatrixXd ScsEigen::QuadraticConstraint::m_Q</definition>
        <argsstring></argsstring>
        <name>m_Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="34" column="21" bodyfile="ScsEigen/QuadraticConstraint.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classScsEigen_1_1QuadraticConstraint_1ac98e09aa78d5126b41f38795552dcc25" prot="private" static="no" mutable="no">
        <type>Eigen::VectorXd</type>
        <definition>Eigen::VectorXd ScsEigen::QuadraticConstraint::m_b</definition>
        <argsstring></argsstring>
        <name>m_b</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="35" column="21" bodyfile="ScsEigen/QuadraticConstraint.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1a02ed91ed973be8952c2d66742f598cd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ScsEigen::QuadraticConstraint::QuadraticConstraint</definition>
        <argsstring>()</argsstring>
        <name>QuadraticConstraint</name>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>If you initialize the class with this constructor please remember to call the <ref refid="classScsEigen_1_1QuadraticConstraint_1ad304616c04e74f12ae2c4a903a3364bf" kindref="member">QuadraticConstraint::setQ()</ref>, <ref refid="classScsEigen_1_1QuadraticConstraint_1a8d5f1cf9e43001a13145eb669998f75e" kindref="member">QuadraticConstraint::setB()</ref> <ref refid="classScsEigen_1_1Constraint_1a6abf0e54bc5d6debf923935ea74918d0" kindref="member">QuadraticConstraint::setBounds()</ref> methods before calling <ref refid="classScsEigen_1_1Solver_1a77f4aea8f4131a2ebb340a5777bebafd" kindref="member">Solver::solve()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="44" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1ac922bc7170456e6e05b071889eb87829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ScsEigen::QuadraticConstraint::QuadraticConstraint</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;Q, const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;b, double upperBound)</argsstring>
        <name>QuadraticConstraint</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;</type>
          <declname>Q</declname>
        </param>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>upperBound</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>the PSD matrix representing the hessian of the constraint function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the gradient of the constraint function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>vector containing the lower bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upperBound</parametername>
</parameternamelist>
<parameterdescription>
<para>vector containing the upper bound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>In case of error an invalid <ref refid="classScsEigen_1_1QuadraticConstraint" kindref="compound">QuadraticConstraint</ref> will be build. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="54" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1ad304616c04e74f12ae2c4a903a3364bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScsEigen::QuadraticConstraint::setQ</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;Q)</argsstring>
        <name>setQ</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::MatrixXd &gt; &amp;</type>
          <declname>Q</declname>
        </param>
        <briefdescription>
<para>Set the hessian matrix Q. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>Q</parametername>
</parameternamelist>
<parameterdescription>
<para>the PSD matrix representing the hessian of the constraint function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>True/false in case of success/failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="63" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1a8d5f1cf9e43001a13145eb669998f75e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ScsEigen::QuadraticConstraint::setB</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;b)</argsstring>
        <name>setB</name>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Set the gradient vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>True/false in case of success/failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="70" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1a56989cdf9fc6a5dbc2d2891e3f04ee0c" prot="public" static="no" const="no" explicit="no" inline="no" final="yes" virt="virtual">
        <type>bool</type>
        <definition>bool ScsEigen::QuadraticConstraint::setLowerBound</definition>
        <argsstring>(const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;lowerBound) final</argsstring>
        <name>setLowerBound</name>
        <reimplements refid="classScsEigen_1_1Constraint_1a4d263e6c85fd45679e6a1a252ee6c8ce">setLowerBound</reimplements>
        <param>
          <type>const Eigen::Ref&lt; const Eigen::VectorXd &gt; &amp;</type>
          <declname>lowerBound</declname>
        </param>
        <briefdescription>
<para>Set the lower bound. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lowerBound</parametername>
</parameternamelist>
<parameterdescription>
<para>vector representing the lower bound. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true in case of success/false otherwise </para>
</simplesect>
<simplesect kind="warning"><para>In case of <ref refid="classScsEigen_1_1QuadraticConstraint" kindref="compound">QuadraticConstraint</ref> the only admissible lower bound is<itemizedlist>
<listitem><para>std::numeric_limits&lt;double&gt;::infinity() </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="79" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1afe213646bd85fcf299465ee7abd9a42c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::MatrixXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::MatrixXd&gt; ScsEigen::QuadraticConstraint::getQ</definition>
        <argsstring>() const</argsstring>
        <name>getQ</name>
        <briefdescription>
<para>Get the hessian <formula id="17">$Q$</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="84" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classScsEigen_1_1QuadraticConstraint_1aea39eed0e88e80f0ee28479dcc213f13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Eigen::Ref&lt; const Eigen::VectorXd &gt;</type>
        <definition>Eigen::Ref&lt;const Eigen::VectorXd&gt; ScsEigen::QuadraticConstraint::getB</definition>
        <argsstring>() const</argsstring>
        <name>getB</name>
        <briefdescription>
<para>Get the vector <formula id="14">$b$</formula>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ScsEigen/QuadraticConstraint.h" line="89" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classScsEigen_1_1QuadraticConstraint" kindref="compound">QuadraticConstraint</ref> is a concrete implementation of <ref refid="classScsEigen_1_1Constraint" kindref="compound">Constraint</ref>. It implements a constraint of the form <formula id="15">\[ \frac{1}{2} x ^\top Q x + b^\top x \le u \]</formula> where <formula id="3">$x \in \mathbb{R}^n$</formula> is the optimization variable. <formula id="16">$Q \in S^n_+$</formula> is a semipositive definite matrix. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ScsEigen::Constraint</label>
        <link refid="classScsEigen_1_1Constraint"/>
      </node>
      <node id="1">
        <label>ScsEigen::QuadraticConstraint</label>
        <link refid="classScsEigen_1_1QuadraticConstraint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="4">
        <label>std::basic_string&lt; Char &gt;</label>
      </node>
      <node id="2">
        <label>ScsEigen::Constraint</label>
        <link refid="classScsEigen_1_1Constraint"/>
        <childnode refid="3" relation="usage">
          <edgelabel>m_description</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::string</label>
        <childnode refid="4" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>ScsEigen::QuadraticConstraint</label>
        <link refid="classScsEigen_1_1QuadraticConstraint"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="ScsEigen/QuadraticConstraint.h" line="31" column="1" bodyfile="ScsEigen/QuadraticConstraint.h" bodystart="32" bodyend="90"/>
    <listofallmembers>
      <member refid="classScsEigen_1_1Constraint_1a3afcea63471f33b51f1c5fd699847450" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>Constraint</name></member>
      <member refid="classScsEigen_1_1Constraint_1a4eff2a5d67e203512d97ba14f834c3cc" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>Constraint</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1aea39eed0e88e80f0ee28479dcc213f13" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getB</name></member>
      <member refid="classScsEigen_1_1Constraint_1adad6357b9ef7336cd288b77374bb9f57" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getDescription</name></member>
      <member refid="classScsEigen_1_1Constraint_1a79b5a575b52f5443438c7449c0e32b4e" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getLowerBound</name></member>
      <member refid="classScsEigen_1_1Constraint_1a2ade7a7665aede297ee2e9fe76f0785d" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getNumberOfConstraints</name></member>
      <member refid="classScsEigen_1_1Constraint_1a612d47e6b3975322e8be687f1bd365ef" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getNumberOfVariables</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1afe213646bd85fcf299465ee7abd9a42c" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getQ</name></member>
      <member refid="classScsEigen_1_1Constraint_1a869dab5651f45854bb782451a3b09fba" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>getUpperBound</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1ac98e09aa78d5126b41f38795552dcc25" prot="private" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_b</name></member>
      <member refid="classScsEigen_1_1Constraint_1adc6fe54c2b1d0cabba8a635c10fe9f6e" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_description</name></member>
      <member refid="classScsEigen_1_1Constraint_1aa37ead2d906c2bb29051f7398cde95bd" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_lowerBound</name></member>
      <member refid="classScsEigen_1_1Constraint_1ac0352757812cfb0edd2b4932ddcb80b2" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_numberOfConstraints</name></member>
      <member refid="classScsEigen_1_1Constraint_1ac4dea5e437ad52876c9aca9972cf9aff" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_numberOfVariables</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1a54485d8fc105e9ed6a1ac8bcdaf886bf" prot="private" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_Q</name></member>
      <member refid="classScsEigen_1_1Constraint_1a1fbfe4874bb4acb3544679410b41019f" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>m_upperBound</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1a02ed91ed973be8952c2d66742f598cd0" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>QuadraticConstraint</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1ac922bc7170456e6e05b071889eb87829" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>QuadraticConstraint</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1a8d5f1cf9e43001a13145eb669998f75e" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setB</name></member>
      <member refid="classScsEigen_1_1Constraint_1a6abf0e54bc5d6debf923935ea74918d0" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setBounds</name></member>
      <member refid="classScsEigen_1_1Constraint_1a8670822e57e2c03e496c7f2efb3027b3" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setDescription</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1a56989cdf9fc6a5dbc2d2891e3f04ee0c" prot="public" virt="virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setLowerBound</name></member>
      <member refid="classScsEigen_1_1Constraint_1ac8898e02e58e7678ce862032c7f4d430" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setNumberOfConstraints</name></member>
      <member refid="classScsEigen_1_1Constraint_1ac667af1a25af66015f973151eae25806" prot="protected" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setNumberOfVariables</name></member>
      <member refid="classScsEigen_1_1QuadraticConstraint_1ad304616c04e74f12ae2c4a903a3364bf" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setQ</name></member>
      <member refid="classScsEigen_1_1Constraint_1a380eb0271203ca9885cf0740bf05ac99" prot="protected" virt="virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>setUpperBound</name></member>
      <member refid="classScsEigen_1_1Constraint_1a9defe57e0321444a0034f7f402260145" prot="public" virt="non-virtual"><scope>ScsEigen::QuadraticConstraint</scope><name>~Constraint</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
